// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyComponent There should be dropdown select city function 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Connect(Main)
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Connect {
      "__reactInternalMemoizedMaskedChildContext": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedMergedChildContext": Object {
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedUnmaskedChildContext": Object {},
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <h1
                      class="title"
                    >
                      FE - Iklim
                    </h1>
                    <select
                      class="select-city"
                    >
                      <option>
                        Select City
                      </option>
                      <option>
                        Jakarta
                      </option>
                      <option>
                        Singapore
                      </option>
                      <option>
                        Bangkok
                      </option>
                    </select>
                    <div
                      class="table-section"
                    >
                      <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <h1
                    class="title"
                  >
                    FE - Iklim
                  </h1>
                  <select
                    class="select-city"
                  >
                    <option>
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>
                  <div
                    class="table-section"
                  >
                    <table
                      class="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
              "lineNumber": 31,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                "lineNumber": 32,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "h1",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "FE - Iklim",
                "className": "title",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "FE - Iklim",
                "className": "title",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                  "lineNumber": 33,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                    "lineNumber": 34,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "option",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Select City",
                    "defaultValue": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Select City",
                    "defaultValue": true,
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 35,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "option",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Jakarta",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Jakarta",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 36,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "option",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Singapore",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Singapore",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 37,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "option",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Bangkok",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Bangkok",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <option>
                          Bangkok
                        </option>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option>
                        Singapore
                      </option>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "stateNode": <option>
                      Jakarta
                    </option>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "stateNode": <option>
                    Select City
                  </option>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "option",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "select",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>,
                    <option>
                      Jakarta
                    </option>,
                    <option>
                      Singapore
                    </option>,
                    <option>
                      Bangkok
                    </option>,
                  ],
                  "className": "select-city",
                  "onChange": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>,
                    <option>
                      Jakarta
                    </option>,
                    <option>
                      Singapore
                    </option>,
                    <option>
                      Bangkok
                    </option>,
                  ],
                  "className": "select-city",
                  "onChange": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                    "lineNumber": 39,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 60,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 40,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 61,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 41,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 63,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 42,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 64,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 43,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "th",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Select The City",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Select The City",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 65,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                              "lineNumber": 44,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "th",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Suhu",
                              "className": "suhu",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Suhu",
                              "className": "suhu",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 66,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 45,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "th",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Perbedaan",
                                "className": "perbedaan",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Perbedaan",
                                "className": "perbedaan",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th
                              class="suhu"
                            >
                              Suhu
                            </th>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "stateNode": <th>
                            Select The City
                          </th>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "th",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "tr",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <th>
                              Select The City
                            </th>,
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>,
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <th>
                              Select The City
                            </th>,
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>,
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "tr",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "thead",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 62,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 48,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 67,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Array [],
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Array [],
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 68,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                              "lineNumber": 56,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 69,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 57,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 72,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 57,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "b",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Rata-rata",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Rata-rata",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <b>
                                  Rata-rata
                                </b>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "b",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "td",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <b>
                                  Rata-rata
                                </b>,
                                "className": "rata-rata",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <b>
                                  Rata-rata
                                </b>,
                                "className": "rata-rata",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 70,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 58,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 73,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 58,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 74,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": null,
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": "0",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "0",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugID": 75,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": null,
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": "C",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "C",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": C,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": 0,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "b",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      0,
                                      "C",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      0,
                                      "C",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <b>
                                    0
                                    C
                                  </b>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "b",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "td",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <b>
                                    0
                                    C
                                  </b>,
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <b>
                                    0
                                    C
                                  </b>,
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 71,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 59,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 76,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                      "lineNumber": 59,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "b",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": 0,
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": 0,
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <b>
                                      0
                                    </b>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "b",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "td",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 2,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <b>
                                      0
                                    </b>,
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <b>
                                      0
                                    </b>,
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <td>
                                    <b>
                                      0
                                    </b>
                                  </td>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "td",
                                  "updateQueue": null,
                                },
                                "stateNode": <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "td",
                                "updateQueue": null,
                              },
                              "stateNode": <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "td",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "tr",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>,
                              ],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>,
                              ],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "tr",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "tbody",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            Array [],
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            Array [],
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "tbody",
                        "updateQueue": null,
                      },
                      "stateNode": <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "thead",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "table",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "table-bordered",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "table-bordered",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <table
                      class="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "table",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "table-section",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "table-section",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="table-section"
                  >
                    <table
                      class="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <select
                  class="select-city"
                >
                  <option>
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "select",
                "updateQueue": null,
              },
              "stateNode": <h1
                class="title"
              >
                FE - Iklim
              </h1>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "h1",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <h1
                  className="title"
                >
                  FE - Iklim
                </h1>,
                <select
                  className="select-city"
                  onChange={[Function]}
                >
                  <option
                    defaultValue={true}
                  >
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>,
                <div
                  className="table-section"
                >
                  <table
                    className="table-bordered"
                  >
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          className="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          className="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          className="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>,
              ],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <h1
                  className="title"
                >
                  FE - Iklim
                </h1>,
                <select
                  className="select-city"
                  onChange={[Function]}
                >
                  <option
                    defaultValue={true}
                  >
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>,
                <div
                  className="table-section"
                >
                  <table
                    className="table-bordered"
                  >
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          className="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          className="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          className="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>,
              ],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div>
              <h1
                class="title"
              >
                FE - Iklim
              </h1>
              <select
                class="select-city"
              >
                <option>
                  Select City
                </option>
                <option>
                  Jakarta
                </option>
                <option>
                  Singapore
                </option>
                <option>
                  Bangkok
                </option>
              </select>
              <div
                class="table-section"
              >
                <table
                  class="table-bordered"
                >
                  <thead>
                    <tr>
                      <th>
                        Select The City
                      </th>
                      <th
                        class="suhu"
                      >
                        Suhu
                      </th>
                      <th
                        class="perbedaan"
                      >
                        Perbedaan
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        class="rata-rata"
                      >
                        <b>
                          Rata-rata
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                          C
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                        </b>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "getCityWeathers": [Function],
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "storeSubscription": Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "unsubscribe": [Function],
            },
            "weather": Array [],
          },
          "memoizedState": Object {
            "city": "Select The City",
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "getCityWeathers": [Function],
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "storeSubscription": Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "unsubscribe": [Function],
            },
            "weather": Array [],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Main {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "getCityWeathers": [Function],
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "storeSubscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "unsubscribe": [Function],
              },
              "weather": Array [],
            },
            "refs": Object {},
            "state": Object {
              "city": "Select The City",
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "memoizedState": Object {},
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <h1
                      class="title"
                    >
                      FE - Iklim
                    </h1>
                    <select
                      class="select-city"
                    >
                      <option>
                        Select City
                      </option>
                      <option>
                        Jakarta
                      </option>
                      <option>
                        Singapore
                      </option>
                      <option>
                        Bangkok
                      </option>
                    </select>
                    <div
                      class="table-section"
                    >
                      <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <h1
                    class="title"
                  >
                    FE - Iklim
                  </h1>
                  <select
                    class="select-city"
                  >
                    <option>
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>
                  <div
                    class="table-section"
                  >
                    <table
                      class="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "notifyNestedSubs": [Function],
      "props": Object {
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "propsMode": true,
      "refs": Object {},
      "renderCount": 0,
      "selector": Object {
        "error": null,
        "props": Object {
          "getCityWeathers": [Function],
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "weather": Array [],
        },
        "run": [Function],
        "shouldComponentUpdate": false,
      },
      "setWrappedInstance": [Function],
      "state": Object {},
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "subscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
      "version": 0,
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": Main {
        "_reactInternalFiber": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <h1
                        class="title"
                      >
                        FE - Iklim
                      </h1>
                      <select
                        class="select-city"
                      >
                        <option>
                          Select City
                        </option>
                        <option>
                          Jakarta
                        </option>
                        <option>
                          Singapore
                        </option>
                        <option>
                          Bangkok
                        </option>
                      </select>
                      <div
                        class="table-section"
                      >
                        <table
                          class="table-bordered"
                        >
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                class="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <h1
                        class="title"
                      >
                        FE - Iklim
                      </h1>
                      <select
                        class="select-city"
                      >
                        <option>
                          Select City
                        </option>
                        <option>
                          Jakarta
                        </option>
                        <option>
                          Singapore
                        </option>
                        <option>
                          Bangkok
                        </option>
                      </select>
                      <div
                        class="table-section"
                      >
                        <table
                          class="table-bordered"
                        >
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                class="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": undefined,
                "storeSubscription": undefined,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "storeSubscription": undefined,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {},
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": undefined,
                "storeSubscription": undefined,
              },
              "notifyNestedSubs": [Function],
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "propsMode": true,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "getCityWeathers": [Function],
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                  "weather": Array [],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "subscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "unsubscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
              "lineNumber": 31,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                "lineNumber": 32,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "h1",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "FE - Iklim",
                "className": "title",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "FE - Iklim",
                "className": "title",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                  "lineNumber": 33,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                    "lineNumber": 34,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "option",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Select City",
                    "defaultValue": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Select City",
                    "defaultValue": true,
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 35,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "option",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Jakarta",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Jakarta",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 36,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "option",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Singapore",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Singapore",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 37,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "option",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Bangkok",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Bangkok",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <option>
                          Bangkok
                        </option>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option>
                        Singapore
                      </option>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "stateNode": <option>
                      Jakarta
                    </option>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "stateNode": <option>
                    Select City
                  </option>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "option",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "select",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>,
                    <option>
                      Jakarta
                    </option>,
                    <option>
                      Singapore
                    </option>,
                    <option>
                      Bangkok
                    </option>,
                  ],
                  "className": "select-city",
                  "onChange": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>,
                    <option>
                      Jakarta
                    </option>,
                    <option>
                      Singapore
                    </option>,
                    <option>
                      Bangkok
                    </option>,
                  ],
                  "className": "select-city",
                  "onChange": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                    "lineNumber": 39,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 60,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 40,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 61,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 41,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 63,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 42,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 64,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 43,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "th",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Select The City",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Select The City",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 65,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                              "lineNumber": 44,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "th",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Suhu",
                              "className": "suhu",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Suhu",
                              "className": "suhu",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 66,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 45,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "th",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Perbedaan",
                                "className": "perbedaan",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Perbedaan",
                                "className": "perbedaan",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th
                              class="suhu"
                            >
                              Suhu
                            </th>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "stateNode": <th>
                            Select The City
                          </th>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "th",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "tr",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <th>
                              Select The City
                            </th>,
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>,
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <th>
                              Select The City
                            </th>,
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>,
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "tr",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "thead",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 62,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 48,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 67,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Array [],
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Array [],
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 68,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                              "lineNumber": 56,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 69,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 57,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 72,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 57,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "b",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Rata-rata",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Rata-rata",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <b>
                                  Rata-rata
                                </b>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "b",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "td",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <b>
                                  Rata-rata
                                </b>,
                                "className": "rata-rata",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <b>
                                  Rata-rata
                                </b>,
                                "className": "rata-rata",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 70,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 58,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 73,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 58,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 74,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": null,
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": "0",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "0",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugID": 75,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": null,
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": "C",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "C",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": C,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": 0,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "b",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      0,
                                      "C",
                                    ],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      0,
                                      "C",
                                    ],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <b>
                                    0
                                    C
                                  </b>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "b",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "td",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <b>
                                    0
                                    C
                                  </b>,
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <b>
                                    0
                                    C
                                  </b>,
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 71,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 59,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 76,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                      "lineNumber": 59,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "b",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": 0,
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": 0,
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <b>
                                      0
                                    </b>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "b",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "td",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 2,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <b>
                                      0
                                    </b>,
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <b>
                                      0
                                    </b>,
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <td>
                                    <b>
                                      0
                                    </b>
                                  </td>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "td",
                                  "updateQueue": null,
                                },
                                "stateNode": <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "td",
                                "updateQueue": null,
                              },
                              "stateNode": <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "td",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "tr",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>,
                              ],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>,
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>,
                              ],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "tr",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "tbody",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            Array [],
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            Array [],
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "tbody",
                        "updateQueue": null,
                      },
                      "stateNode": <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "thead",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "table",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "table-bordered",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>,
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>,
                      ],
                      "className": "table-bordered",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <table
                      class="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "table",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "table-section",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>,
                    "className": "table-section",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="table-section"
                  >
                    <table
                      class="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <select
                  class="select-city"
                >
                  <option>
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "select",
                "updateQueue": null,
              },
              "stateNode": <h1
                class="title"
              >
                FE - Iklim
              </h1>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "h1",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <h1
                  className="title"
                >
                  FE - Iklim
                </h1>,
                <select
                  className="select-city"
                  onChange={[Function]}
                >
                  <option
                    defaultValue={true}
                  >
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>,
                <div
                  className="table-section"
                >
                  <table
                    className="table-bordered"
                  >
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          className="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          className="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          className="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>,
              ],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <h1
                  className="title"
                >
                  FE - Iklim
                </h1>,
                <select
                  className="select-city"
                  onChange={[Function]}
                >
                  <option
                    defaultValue={true}
                  >
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>,
                <div
                  className="table-section"
                >
                  <table
                    className="table-bordered"
                  >
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          className="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          className="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          className="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>,
              ],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div>
              <h1
                class="title"
              >
                FE - Iklim
              </h1>
              <select
                class="select-city"
              >
                <option>
                  Select City
                </option>
                <option>
                  Jakarta
                </option>
                <option>
                  Singapore
                </option>
                <option>
                  Bangkok
                </option>
              </select>
              <div
                class="table-section"
              >
                <table
                  class="table-bordered"
                >
                  <thead>
                    <tr>
                      <th>
                        Select The City
                      </th>
                      <th
                        class="suhu"
                      >
                        Suhu
                      </th>
                      <th
                        class="perbedaan"
                      >
                        Perbedaan
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        class="rata-rata"
                      >
                        <b>
                          Rata-rata
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                          C
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                        </b>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "getCityWeathers": [Function],
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "storeSubscription": Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "unsubscribe": [Function],
            },
            "weather": Array [],
          },
          "memoizedState": Object {
            "city": "Select The City",
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "getCityWeathers": [Function],
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "storeSubscription": Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "unsubscribe": [Function],
            },
            "weather": Array [],
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <h1
                        class="title"
                      >
                        FE - Iklim
                      </h1>
                      <select
                        class="select-city"
                      >
                        <option>
                          Select City
                        </option>
                        <option>
                          Jakarta
                        </option>
                        <option>
                          Singapore
                        </option>
                        <option>
                          Bangkok
                        </option>
                      </select>
                      <div
                        class="table-section"
                      >
                        <table
                          class="table-bordered"
                        >
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                class="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <h1
                        class="title"
                      >
                        FE - Iklim
                      </h1>
                      <select
                        class="select-city"
                      >
                        <option>
                          Select City
                        </option>
                        <option>
                          Jakarta
                        </option>
                        <option>
                          Singapore
                        </option>
                        <option>
                          Bangkok
                        </option>
                      </select>
                      <div
                        class="table-section"
                      >
                        <table
                          class="table-bordered"
                        >
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                class="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": undefined,
                "storeSubscription": undefined,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "storeSubscription": undefined,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {},
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": undefined,
                "storeSubscription": undefined,
              },
              "notifyNestedSubs": [Function],
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "propsMode": true,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "getCityWeathers": [Function],
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                  "weather": Array [],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "subscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "unsubscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "getCityWeathers": [Function],
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "storeSubscription": Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          },
          "weather": Array [],
        },
        "refs": Object {},
        "state": Object {
          "city": "Select The City",
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "getCityWeathers": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
        "weather": Array [],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <h1
            class="title"
          >
            FE - Iklim
          </h1>
          <select
            class="select-city"
          >
            <option>
              Select City
            </option>
            <option>
              Jakarta
            </option>
            <option>
              Singapore
            </option>
            <option>
              Bangkok
            </option>
          </select>
          <div
            class="table-section"
          >
            <table
              class="table-bordered"
            >
              <thead>
                <tr>
                  <th>
                    Select The City
                  </th>
                  <th
                    class="suhu"
                  >
                    Suhu
                  </th>
                  <th
                    class="perbedaan"
                  >
                    Perbedaan
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    class="rata-rata"
                  >
                    <b>
                      Rata-rata
                    </b>
                  </td>
                  <td>
                    <b>
                      0
                      C
                    </b>
                  </td>
                  <td>
                    <b>
                      0
                    </b>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="title"
            >
              FE - Iklim
            </h1>,
            <select
              className="select-city"
              onChange={[Function]}
            >
              <option
                defaultValue={true}
              >
                Select City
              </option>
              <option>
                Jakarta
              </option>
              <option>
                Singapore
              </option>
              <option>
                Bangkok
              </option>
            </select>,
            <div
              className="table-section"
            >
              <table
                className="table-bordered"
              >
                <thead>
                  <tr>
                    <th>
                      Select The City
                    </th>
                    <th
                      className="suhu"
                    >
                      Suhu
                    </th>
                    <th
                      className="perbedaan"
                    >
                      Perbedaan
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      className="rata-rata"
                    >
                      <b>
                        Rata-rata
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                        C
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                      </b>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <h1
              class="title"
            >
              FE - Iklim
            </h1>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "FE - Iklim",
              "className": "title",
            },
            "ref": null,
            "rendered": Array [
              "FE - Iklim",
            ],
            "type": "h1",
          },
          Object {
            "instance": <select
              class="select-city"
            >
              <option>
                Select City
              </option>
              <option>
                Jakarta
              </option>
              <option>
                Singapore
              </option>
              <option>
                Bangkok
              </option>
            </select>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  defaultValue={true}
                >
                  Select City
                </option>,
                <option>
                  Jakarta
                </option>,
                <option>
                  Singapore
                </option>,
                <option>
                  Bangkok
                </option>,
              ],
              "className": "select-city",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <option>
                  Select City
                </option>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Select City",
                  "defaultValue": true,
                },
                "ref": null,
                "rendered": Array [
                  "Select City",
                ],
                "type": "option",
              },
              Object {
                "instance": <option>
                  Jakarta
                </option>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Jakarta",
                },
                "ref": null,
                "rendered": Array [
                  "Jakarta",
                ],
                "type": "option",
              },
              Object {
                "instance": <option>
                  Singapore
                </option>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Singapore",
                },
                "ref": null,
                "rendered": Array [
                  "Singapore",
                ],
                "type": "option",
              },
              Object {
                "instance": <option>
                  Bangkok
                </option>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Bangkok",
                },
                "ref": null,
                "rendered": Array [
                  "Bangkok",
                ],
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": <div
              class="table-section"
            >
              <table
                class="table-bordered"
              >
                <thead>
                  <tr>
                    <th>
                      Select The City
                    </th>
                    <th
                      class="suhu"
                    >
                      Suhu
                    </th>
                    <th
                      class="perbedaan"
                    >
                      Perbedaan
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      class="rata-rata"
                    >
                      <b>
                        Rata-rata
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                        C
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                      </b>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <table
                className="table-bordered"
              >
                <thead>
                  <tr>
                    <th>
                      Select The City
                    </th>
                    <th
                      className="suhu"
                    >
                      Suhu
                    </th>
                    <th
                      className="perbedaan"
                    >
                      Perbedaan
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      className="rata-rata"
                    >
                      <b>
                        Rata-rata
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                        C
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                      </b>
                    </td>
                  </tr>
                </tbody>
              </table>,
              "className": "table-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <table
                  class="table-bordered"
                >
                  <thead>
                    <tr>
                      <th>
                        Select The City
                      </th>
                      <th
                        class="suhu"
                      >
                        Suhu
                      </th>
                      <th
                        class="perbedaan"
                      >
                        Perbedaan
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        class="rata-rata"
                      >
                        <b>
                          Rata-rata
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                          C
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                        </b>
                      </td>
                    </tr>
                  </tbody>
                </table>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          className="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          className="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>,
                    <tbody>
                      <tr>
                        <td
                          className="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>,
                  ],
                  "className": "table-bordered",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          class="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          class="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          className="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          className="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <th>
                              Select The City
                            </th>,
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>,
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <th>
                              Select The City
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Select The City",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Select The City",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              class="suhu"
                            >
                              Suhu
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Suhu",
                              "className": "suhu",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Suhu",
                            ],
                            "type": "th",
                          },
                          Object {
                            "instance": <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Perbedaan",
                              "className": "perbedaan",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Perbedaan",
                            ],
                            "type": "th",
                          },
                        ],
                        "type": "tr",
                      },
                    ],
                    "type": "thead",
                  },
                  Object {
                    "instance": <tbody>
                      <tr>
                        <td
                          class="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        Array [],
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      null,
                      Object {
                        "instance": <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>,
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>,
                            <td>
                              <b>
                                0
                              </b>
                            </td>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <b>
                                Rata-rata
                              </b>,
                              "className": "rata-rata",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <b>
                                  Rata-rata
                                </b>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "Rata-rata",
                                },
                                "ref": null,
                                "rendered": Array [
                                  "Rata-rata",
                                ],
                                "type": "b",
                              },
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td>
                              <b>
                                0
                                C
                              </b>
                            </td>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <b>
                                0
                                C
                              </b>,
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <b>
                                  0
                                  C
                                </b>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": Array [
                                    0,
                                    "C",
                                  ],
                                },
                                "ref": null,
                                "rendered": Array [
                                  "0",
                                  "C",
                                ],
                                "type": "b",
                              },
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": <td>
                              <b>
                                0
                              </b>
                            </td>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <b>
                                0
                              </b>,
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": <b>
                                  0
                                </b>,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": 0,
                                },
                                "ref": null,
                                "rendered": Array [
                                  0,
                                ],
                                "type": "b",
                              },
                            ],
                            "type": "td",
                          },
                        ],
                        "type": "tr",
                      },
                    ],
                    "type": "tbody",
                  },
                ],
                "type": "table",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Connect {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "store": undefined,
          "storeSubscription": undefined,
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "storeSubscription": undefined,
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <h1
                        class="title"
                      >
                        FE - Iklim
                      </h1>
                      <select
                        class="select-city"
                      >
                        <option>
                          Select City
                        </option>
                        <option>
                          Jakarta
                        </option>
                        <option>
                          Singapore
                        </option>
                        <option>
                          Bangkok
                        </option>
                      </select>
                      <div
                        class="table-section"
                      >
                        <table
                          class="table-bordered"
                        >
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                class="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <h1
                      class="title"
                    >
                      FE - Iklim
                    </h1>
                    <select
                      class="select-city"
                    >
                      <option>
                        Select City
                      </option>
                      <option>
                        Jakarta
                      </option>
                      <option>
                        Singapore
                      </option>
                      <option>
                        Bangkok
                      </option>
                    </select>
                    <div
                      class="table-section"
                    >
                      <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                "lineNumber": 31,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                  "lineNumber": 32,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "h1",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "FE - Iklim",
                  "className": "title",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "FE - Iklim",
                  "className": "title",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                    "lineNumber": 33,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 34,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "option",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Select City",
                      "defaultValue": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Select City",
                      "defaultValue": true,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 35,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "option",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Jakarta",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Jakarta",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 36,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "option",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Singapore",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Singapore",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 37,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "option",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Bangkok",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Bangkok",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <option>
                            Bangkok
                          </option>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "stateNode": <option>
                          Singapore
                        </option>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option>
                        Jakarta
                      </option>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "stateNode": <option>
                      Select City
                    </option>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "select",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <option
                        defaultValue={true}
                      >
                        Select City
                      </option>,
                      <option>
                        Jakarta
                      </option>,
                      <option>
                        Singapore
                      </option>,
                      <option>
                        Bangkok
                      </option>,
                    ],
                    "className": "select-city",
                    "onChange": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <option
                        defaultValue={true}
                      >
                        Select City
                      </option>,
                      <option>
                        Jakarta
                      </option>,
                      <option>
                        Singapore
                      </option>,
                      <option>
                        Bangkok
                      </option>,
                    ],
                    "className": "select-city",
                    "onChange": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 39,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 60,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 40,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 61,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 41,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 63,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 42,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 64,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                              "lineNumber": 43,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "th",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Select The City",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Select The City",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 65,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 44,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "th",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Suhu",
                                "className": "suhu",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Suhu",
                                "className": "suhu",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 66,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 45,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "th",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Perbedaan",
                                  "className": "perbedaan",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Perbedaan",
                                  "className": "perbedaan",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "th",
                                "updateQueue": null,
                              },
                              "stateNode": <th
                                class="suhu"
                              >
                                Suhu
                              </th>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th>
                              Select The City
                            </th>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "tr",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <th>
                                Select The City
                              </th>,
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>,
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <th>
                                Select The City
                              </th>,
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>,
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "tr",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "thead",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 48,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 67,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Array [],
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Array [],
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 68,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 56,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 69,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 57,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 72,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 57,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "b",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Rata-rata",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Rata-rata",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <b>
                                    Rata-rata
                                  </b>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "b",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "td",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <b>
                                    Rata-rata
                                  </b>,
                                  "className": "rata-rata",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <b>
                                    Rata-rata
                                  </b>,
                                  "className": "rata-rata",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 70,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 58,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 73,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                      "lineNumber": 58,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugID": 74,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": null,
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": "0",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "0",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugID": 75,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "effectTag": 0,
                                        "elementType": null,
                                        "expirationTime": 0,
                                        "firstContextDependency": null,
                                        "firstEffect": null,
                                        "index": 1,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": "C",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "C",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": C,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": 0,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "b",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        0,
                                        "C",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        0,
                                        "C",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <b>
                                      0
                                      C
                                    </b>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "b",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "td",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <b>
                                      0
                                      C
                                    </b>,
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <b>
                                      0
                                      C
                                    </b>,
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugID": 71,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                      "lineNumber": 59,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugID": 76,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                        "lineNumber": 59,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": "b",
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": 0,
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": 0,
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <b>
                                        0
                                      </b>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "b",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "td",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 2,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": <b>
                                        0
                                      </b>,
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <b>
                                        0
                                      </b>,
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <td>
                                      <b>
                                        0
                                      </b>
                                    </td>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "td",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "td",
                                  "updateQueue": null,
                                },
                                "stateNode": <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "td",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "tr",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <td
                                    className="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>,
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <td
                                    className="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>,
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "tr",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "tbody",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              Array [],
                              <tr>
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              Array [],
                              <tr>
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "tbody",
                          "updateQueue": null,
                        },
                        "stateNode": <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "thead",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "table",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "table-bordered",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "table-bordered",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "table",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <table
                        className="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "table-section",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <table
                        className="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "table-section",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="table-section"
                    >
                      <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <select
                    class="select-city"
                  >
                    <option>
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "select",
                  "updateQueue": null,
                },
                "stateNode": <h1
                  class="title"
                >
                  FE - Iklim
                </h1>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "h1",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h1
                    className="title"
                  >
                    FE - Iklim
                  </h1>,
                  <select
                    className="select-city"
                    onChange={[Function]}
                  >
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>,
                  <div
                    className="table-section"
                  >
                    <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h1
                    className="title"
                  >
                    FE - Iklim
                  </h1>,
                  <select
                    className="select-city"
                    onChange={[Function]}
                  >
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>,
                  <div
                    className="table-section"
                  >
                    <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>,
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <h1
                  class="title"
                >
                  FE - Iklim
                </h1>
                <select
                  class="select-city"
                >
                  <option>
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>
                <div
                  class="table-section"
                >
                  <table
                    class="table-bordered"
                  >
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          class="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          class="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          class="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "getCityWeathers": [Function],
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "storeSubscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "unsubscribe": [Function],
              },
              "weather": Array [],
            },
            "memoizedState": Object {
              "city": "Select The City",
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "getCityWeathers": [Function],
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "storeSubscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "unsubscribe": [Function],
              },
              "weather": Array [],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Main {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "getCityWeathers": [Function],
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                  "unsubscribe": [Function],
                },
                "weather": Array [],
              },
              "refs": Object {},
              "state": Object {
                "city": "Select The City",
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
          },
          "memoizedState": Object {},
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <h1
                        class="title"
                      >
                        FE - Iklim
                      </h1>
                      <select
                        class="select-city"
                      >
                        <option>
                          Select City
                        </option>
                        <option>
                          Jakarta
                        </option>
                        <option>
                          Singapore
                        </option>
                        <option>
                          Bangkok
                        </option>
                      </select>
                      <div
                        class="table-section"
                      >
                        <table
                          class="table-bordered"
                        >
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                class="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <h1
                      class="title"
                    >
                      FE - Iklim
                    </h1>
                    <select
                      class="select-city"
                    >
                      <option>
                        Select City
                      </option>
                      <option>
                        Jakarta
                      </option>
                      <option>
                        Singapore
                      </option>
                      <option>
                        Bangkok
                      </option>
                    </select>
                    <div
                      class="table-section"
                    >
                      <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "store": Object {
                          "dispatch": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                          Symbol(observable): [Function],
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {
          "store": undefined,
          "storeSubscription": undefined,
        },
        "notifyNestedSubs": [Function],
        "props": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "propsMode": true,
        "refs": Object {},
        "renderCount": 0,
        "selector": Object {
          "error": null,
          "props": Object {
            "getCityWeathers": [Function],
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "weather": Array [],
          },
          "run": [Function],
          "shouldComponentUpdate": false,
        },
        "setWrappedInstance": [Function],
        "state": Object {},
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "subscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
        "version": 0,
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": Main {
          "_reactInternalFiber": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <h1
                            class="title"
                          >
                            FE - Iklim
                          </h1>
                          <select
                            class="select-city"
                          >
                            <option>
                              Select City
                            </option>
                            <option>
                              Jakarta
                            </option>
                            <option>
                              Singapore
                            </option>
                            <option>
                              Bangkok
                            </option>
                          </select>
                          <div
                            class="table-section"
                          >
                            <table
                              class="table-bordered"
                            >
                              <thead>
                                <tr>
                                  <th>
                                    Select The City
                                  </th>
                                  <th
                                    class="suhu"
                                  >
                                    Suhu
                                  </th>
                                  <th
                                    class="perbedaan"
                                  >
                                    Perbedaan
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td
                                    class="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <h1
                            class="title"
                          >
                            FE - Iklim
                          </h1>
                          <select
                            class="select-city"
                          >
                            <option>
                              Select City
                            </option>
                            <option>
                              Jakarta
                            </option>
                            <option>
                              Singapore
                            </option>
                            <option>
                              Bangkok
                            </option>
                          </select>
                          <div
                            class="table-section"
                          >
                            <table
                              class="table-bordered"
                            >
                              <thead>
                                <tr>
                                  <th>
                                    Select The City
                                  </th>
                                  <th
                                    class="suhu"
                                  >
                                    Suhu
                                  </th>
                                  <th
                                    class="perbedaan"
                                  >
                                    Perbedaan
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td
                                    class="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": undefined,
                  "storeSubscription": undefined,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "storeSubscription": undefined,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {},
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": undefined,
                  "storeSubscription": undefined,
                },
                "notifyNestedSubs": [Function],
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "propsMode": true,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "getCityWeathers": [Function],
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                    "weather": Array [],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "subscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                "lineNumber": 31,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                  "lineNumber": 32,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "h1",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "FE - Iklim",
                  "className": "title",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "FE - Iklim",
                  "className": "title",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                    "lineNumber": 33,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 34,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "option",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Select City",
                      "defaultValue": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Select City",
                      "defaultValue": true,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 35,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "option",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Jakarta",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Jakarta",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 36,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "option",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Singapore",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Singapore",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 37,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "option",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Bangkok",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Bangkok",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <option>
                            Bangkok
                          </option>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "stateNode": <option>
                          Singapore
                        </option>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option>
                        Jakarta
                      </option>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "stateNode": <option>
                      Select City
                    </option>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "option",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "select",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <option
                        defaultValue={true}
                      >
                        Select City
                      </option>,
                      <option>
                        Jakarta
                      </option>,
                      <option>
                        Singapore
                      </option>,
                      <option>
                        Bangkok
                      </option>,
                    ],
                    "className": "select-city",
                    "onChange": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <option
                        defaultValue={true}
                      >
                        Select City
                      </option>,
                      <option>
                        Jakarta
                      </option>,
                      <option>
                        Singapore
                      </option>,
                      <option>
                        Bangkok
                      </option>,
                    ],
                    "className": "select-city",
                    "onChange": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                      "lineNumber": 39,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 60,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                        "lineNumber": 40,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 61,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                          "lineNumber": 41,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 63,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 42,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 64,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                              "lineNumber": 43,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "th",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Select The City",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Select The City",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 65,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 44,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "th",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Suhu",
                                "className": "suhu",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Suhu",
                                "className": "suhu",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 66,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 45,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "th",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Perbedaan",
                                  "className": "perbedaan",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Perbedaan",
                                  "className": "perbedaan",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "th",
                                "updateQueue": null,
                              },
                              "stateNode": <th
                                class="suhu"
                              >
                                Suhu
                              </th>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th>
                              Select The City
                            </th>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "tr",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <th>
                                Select The City
                              </th>,
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>,
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <th>
                                Select The City
                              </th>,
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>,
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "tr",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "thead",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                            "lineNumber": 48,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 67,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Array [],
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Array [],
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 68,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                "lineNumber": 56,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 69,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                  "lineNumber": 57,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 72,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 57,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "b",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Rata-rata",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Rata-rata",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <b>
                                    Rata-rata
                                  </b>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "b",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "td",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <b>
                                    Rata-rata
                                  </b>,
                                  "className": "rata-rata",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <b>
                                    Rata-rata
                                  </b>,
                                  "className": "rata-rata",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 70,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                    "lineNumber": 58,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 73,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                      "lineNumber": 58,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugID": 74,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": null,
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": "0",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "0",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugID": 75,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "effectTag": 0,
                                        "elementType": null,
                                        "expirationTime": 0,
                                        "firstContextDependency": null,
                                        "firstEffect": null,
                                        "index": 1,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": "C",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": "C",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": C,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": 0,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "b",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": Array [
                                        0,
                                        "C",
                                      ],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": Array [
                                        0,
                                        "C",
                                      ],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <b>
                                      0
                                      C
                                    </b>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "b",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "td",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <b>
                                      0
                                      C
                                    </b>,
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <b>
                                      0
                                      C
                                    </b>,
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugID": 71,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                      "lineNumber": 59,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugID": 76,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/stedy/Documents/experiments/FE-iklim/iklim/src/View/Main.js",
                                        "lineNumber": 59,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": "b",
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": 0,
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": 0,
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <b>
                                        0
                                      </b>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "b",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "td",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 2,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": <b>
                                        0
                                      </b>,
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <b>
                                        0
                                      </b>,
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <td>
                                      <b>
                                        0
                                      </b>
                                    </td>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "td",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "td",
                                  "updateQueue": null,
                                },
                                "stateNode": <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "td",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "tr",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <td
                                    className="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>,
                                ],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <td
                                    className="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>,
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>,
                                ],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "tr",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "tbody",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              Array [],
                              <tr>
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              Array [],
                              <tr>
                                <td
                                  className="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <tbody>
                            <tr>
                              <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "tbody",
                          "updateQueue": null,
                        },
                        "stateNode": <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "thead",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "table",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "table-bordered",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <thead>
                            <tr>
                              <th>
                                Select The City
                              </th>
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>
                            </tr>
                          </thead>,
                          <tbody>
                            <tr>
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>
                              <td>
                                <b>
                                  0
                                </b>
                              </td>
                            </tr>
                          </tbody>,
                        ],
                        "className": "table-bordered",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "table",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <table
                        className="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "table-section",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <table
                        className="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              className="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              className="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>,
                      "className": "table-section",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="table-section"
                    >
                      <table
                        class="table-bordered"
                      >
                        <thead>
                          <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <select
                    class="select-city"
                  >
                    <option>
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "select",
                  "updateQueue": null,
                },
                "stateNode": <h1
                  class="title"
                >
                  FE - Iklim
                </h1>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "h1",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h1
                    className="title"
                  >
                    FE - Iklim
                  </h1>,
                  <select
                    className="select-city"
                    onChange={[Function]}
                  >
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>,
                  <div
                    className="table-section"
                  >
                    <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h1
                    className="title"
                  >
                    FE - Iklim
                  </h1>,
                  <select
                    className="select-city"
                    onChange={[Function]}
                  >
                    <option
                      defaultValue={true}
                    >
                      Select City
                    </option>
                    <option>
                      Jakarta
                    </option>
                    <option>
                      Singapore
                    </option>
                    <option>
                      Bangkok
                    </option>
                  </select>,
                  <div
                    className="table-section"
                  >
                    <table
                      className="table-bordered"
                    >
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>,
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <h1
                  class="title"
                >
                  FE - Iklim
                </h1>
                <select
                  class="select-city"
                >
                  <option>
                    Select City
                  </option>
                  <option>
                    Jakarta
                  </option>
                  <option>
                    Singapore
                  </option>
                  <option>
                    Bangkok
                  </option>
                </select>
                <div
                  class="table-section"
                >
                  <table
                    class="table-bordered"
                  >
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          class="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          class="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          class="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "getCityWeathers": [Function],
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "storeSubscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "unsubscribe": [Function],
              },
              "weather": Array [],
            },
            "memoizedState": Object {
              "city": "Select The City",
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "getCityWeathers": [Function],
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "storeSubscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "unsubscribe": [Function],
              },
              "weather": Array [],
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <h1
                            class="title"
                          >
                            FE - Iklim
                          </h1>
                          <select
                            class="select-city"
                          >
                            <option>
                              Select City
                            </option>
                            <option>
                              Jakarta
                            </option>
                            <option>
                              Singapore
                            </option>
                            <option>
                              Bangkok
                            </option>
                          </select>
                          <div
                            class="table-section"
                          >
                            <table
                              class="table-bordered"
                            >
                              <thead>
                                <tr>
                                  <th>
                                    Select The City
                                  </th>
                                  <th
                                    class="suhu"
                                  >
                                    Suhu
                                  </th>
                                  <th
                                    class="perbedaan"
                                  >
                                    Perbedaan
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td
                                    class="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <h1
                            class="title"
                          >
                            FE - Iklim
                          </h1>
                          <select
                            class="select-city"
                          >
                            <option>
                              Select City
                            </option>
                            <option>
                              Jakarta
                            </option>
                            <option>
                              Singapore
                            </option>
                            <option>
                              Bangkok
                            </option>
                          </select>
                          <div
                            class="table-section"
                          >
                            <table
                              class="table-bordered"
                            >
                              <thead>
                                <tr>
                                  <th>
                                    Select The City
                                  </th>
                                  <th
                                    class="suhu"
                                  >
                                    Suhu
                                  </th>
                                  <th
                                    class="perbedaan"
                                  >
                                    Perbedaan
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td
                                    class="rata-rata"
                                  >
                                    <b>
                                      Rata-rata
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                      C
                                    </b>
                                  </td>
                                  <td>
                                    <b>
                                      0
                                    </b>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "store": Object {
                                  "dispatch": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                  Symbol(observable): [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "store": Object {
                            "dispatch": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                            Symbol(observable): [Function],
                          },
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <h1
                          class="title"
                        >
                          FE - Iklim
                        </h1>
                        <select
                          class="select-city"
                        >
                          <option>
                            Select City
                          </option>
                          <option>
                            Jakarta
                          </option>
                          <option>
                            Singapore
                          </option>
                          <option>
                            Bangkok
                          </option>
                        </select>
                        <div
                          class="table-section"
                        >
                          <table
                            class="table-bordered"
                          >
                            <thead>
                              <tr>
                                <th>
                                  Select The City
                                </th>
                                <th
                                  class="suhu"
                                >
                                  Suhu
                                </th>
                                <th
                                  class="perbedaan"
                                >
                                  Perbedaan
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td
                                  class="rata-rata"
                                >
                                  <b>
                                    Rata-rata
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                    C
                                  </b>
                                </td>
                                <td>
                                  <b>
                                    0
                                  </b>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "store": Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            },
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      },
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": undefined,
                  "storeSubscription": undefined,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "storeSubscription": undefined,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {},
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": undefined,
                  "storeSubscription": undefined,
                },
                "notifyNestedSubs": [Function],
                "props": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                },
                "propsMode": true,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "getCityWeathers": [Function],
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                    "weather": Array [],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                },
                "subscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "getCityWeathers": [Function],
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "storeSubscription": Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "unsubscribe": [Function],
            },
            "weather": Array [],
          },
          "refs": Object {},
          "state": Object {
            "city": "Select The City",
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "getCityWeathers": [Function],
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "storeSubscription": Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          },
          "weather": Array [],
        },
        "ref": null,
        "rendered": Object {
          "instance": <div>
            <h1
              class="title"
            >
              FE - Iklim
            </h1>
            <select
              class="select-city"
            >
              <option>
                Select City
              </option>
              <option>
                Jakarta
              </option>
              <option>
                Singapore
              </option>
              <option>
                Bangkok
              </option>
            </select>
            <div
              class="table-section"
            >
              <table
                class="table-bordered"
              >
                <thead>
                  <tr>
                    <th>
                      Select The City
                    </th>
                    <th
                      class="suhu"
                    >
                      Suhu
                    </th>
                    <th
                      class="perbedaan"
                    >
                      Perbedaan
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td
                      class="rata-rata"
                    >
                      <b>
                        Rata-rata
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                        C
                      </b>
                    </td>
                    <td>
                      <b>
                        0
                      </b>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="title"
              >
                FE - Iklim
              </h1>,
              <select
                className="select-city"
                onChange={[Function]}
              >
                <option
                  defaultValue={true}
                >
                  Select City
                </option>
                <option>
                  Jakarta
                </option>
                <option>
                  Singapore
                </option>
                <option>
                  Bangkok
                </option>
              </select>,
              <div
                className="table-section"
              >
                <table
                  className="table-bordered"
                >
                  <thead>
                    <tr>
                      <th>
                        Select The City
                      </th>
                      <th
                        className="suhu"
                      >
                        Suhu
                      </th>
                      <th
                        className="perbedaan"
                      >
                        Perbedaan
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        className="rata-rata"
                      >
                        <b>
                          Rata-rata
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                          C
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                        </b>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <h1
                class="title"
              >
                FE - Iklim
              </h1>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "FE - Iklim",
                "className": "title",
              },
              "ref": null,
              "rendered": Array [
                "FE - Iklim",
              ],
              "type": "h1",
            },
            Object {
              "instance": <select
                class="select-city"
              >
                <option>
                  Select City
                </option>
                <option>
                  Jakarta
                </option>
                <option>
                  Singapore
                </option>
                <option>
                  Bangkok
                </option>
              </select>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    defaultValue={true}
                  >
                    Select City
                  </option>,
                  <option>
                    Jakarta
                  </option>,
                  <option>
                    Singapore
                  </option>,
                  <option>
                    Bangkok
                  </option>,
                ],
                "className": "select-city",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <option>
                    Select City
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Select City",
                    "defaultValue": true,
                  },
                  "ref": null,
                  "rendered": Array [
                    "Select City",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option>
                    Jakarta
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Jakarta",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Jakarta",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option>
                    Singapore
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Singapore",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Singapore",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option>
                    Bangkok
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Bangkok",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Bangkok",
                  ],
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": <div
                class="table-section"
              >
                <table
                  class="table-bordered"
                >
                  <thead>
                    <tr>
                      <th>
                        Select The City
                      </th>
                      <th
                        class="suhu"
                      >
                        Suhu
                      </th>
                      <th
                        class="perbedaan"
                      >
                        Perbedaan
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        class="rata-rata"
                      >
                        <b>
                          Rata-rata
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                          C
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                        </b>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <table
                  className="table-bordered"
                >
                  <thead>
                    <tr>
                      <th>
                        Select The City
                      </th>
                      <th
                        className="suhu"
                      >
                        Suhu
                      </th>
                      <th
                        className="perbedaan"
                      >
                        Perbedaan
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td
                        className="rata-rata"
                      >
                        <b>
                          Rata-rata
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                          C
                        </b>
                      </td>
                      <td>
                        <b>
                          0
                        </b>
                      </td>
                    </tr>
                  </tbody>
                </table>,
                "className": "table-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <table
                    class="table-bordered"
                  >
                    <thead>
                      <tr>
                        <th>
                          Select The City
                        </th>
                        <th
                          class="suhu"
                        >
                          Suhu
                        </th>
                        <th
                          class="perbedaan"
                        >
                          Perbedaan
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td
                          class="rata-rata"
                        >
                          <b>
                            Rata-rata
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                            C
                          </b>
                        </td>
                        <td>
                          <b>
                            0
                          </b>
                        </td>
                      </tr>
                    </tbody>
                  </table>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>,
                      <tbody>
                        <tr>
                          <td
                            className="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>,
                    ],
                    "className": "table-bordered",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <thead>
                        <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            class="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            class="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>
                      </thead>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <tr>
                          <th>
                            Select The City
                          </th>
                          <th
                            className="suhu"
                          >
                            Suhu
                          </th>
                          <th
                            className="perbedaan"
                          >
                            Perbedaan
                          </th>
                        </tr>,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <tr>
                            <th>
                              Select The City
                            </th>
                            <th
                              class="suhu"
                            >
                              Suhu
                            </th>
                            <th
                              class="perbedaan"
                            >
                              Perbedaan
                            </th>
                          </tr>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <th>
                                Select The City
                              </th>,
                              <th
                                className="suhu"
                              >
                                Suhu
                              </th>,
                              <th
                                className="perbedaan"
                              >
                                Perbedaan
                              </th>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <th>
                                Select The City
                              </th>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Select The City",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Select The City",
                              ],
                              "type": "th",
                            },
                            Object {
                              "instance": <th
                                class="suhu"
                              >
                                Suhu
                              </th>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Suhu",
                                "className": "suhu",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Suhu",
                              ],
                              "type": "th",
                            },
                            Object {
                              "instance": <th
                                class="perbedaan"
                              >
                                Perbedaan
                              </th>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Perbedaan",
                                "className": "perbedaan",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Perbedaan",
                              ],
                              "type": "th",
                            },
                          ],
                          "type": "tr",
                        },
                      ],
                      "type": "thead",
                    },
                    Object {
                      "instance": <tbody>
                        <tr>
                          <td
                            class="rata-rata"
                          >
                            <b>
                              Rata-rata
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                              C
                            </b>
                          </td>
                          <td>
                            <b>
                              0
                            </b>
                          </td>
                        </tr>
                      </tbody>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          Array [],
                          <tr>
                            <td
                              className="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        null,
                        Object {
                          "instance": <tr>
                            <td
                              class="rata-rata"
                            >
                              <b>
                                Rata-rata
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                                C
                              </b>
                            </td>
                            <td>
                              <b>
                                0
                              </b>
                            </td>
                          </tr>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <td
                                className="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>,
                              <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>,
                              <td>
                                <b>
                                  0
                                </b>
                              </td>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <td
                                class="rata-rata"
                              >
                                <b>
                                  Rata-rata
                                </b>
                              </td>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <b>
                                  Rata-rata
                                </b>,
                                "className": "rata-rata",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": <b>
                                    Rata-rata
                                  </b>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": "Rata-rata",
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "Rata-rata",
                                  ],
                                  "type": "b",
                                },
                              ],
                              "type": "td",
                            },
                            Object {
                              "instance": <td>
                                <b>
                                  0
                                  C
                                </b>
                              </td>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <b>
                                  0
                                  C
                                </b>,
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": <b>
                                    0
                                    C
                                  </b>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": Array [
                                      0,
                                      "C",
                                    ],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "0",
                                    "C",
                                  ],
                                  "type": "b",
                                },
                              ],
                              "type": "td",
                            },
                            Object {
                              "instance": <td>
                                <b>
                                  0
                                </b>
                              </td>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": <b>
                                  0
                                </b>,
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": <b>
                                    0
                                  </b>,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": 0,
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    0,
                                  ],
                                  "type": "b",
                                },
                              ],
                              "type": "td",
                            },
                          ],
                          "type": "tr",
                        },
                      ],
                      "type": "tbody",
                    },
                  ],
                  "type": "table",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`MyComponent should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Main)
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "getCityWeathers": [Function],
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      },
      "weather": Array [],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "getCityWeathers": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
        "weather": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`MyComponent should render table correctly with given weathers 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Main)
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    weather={
      Array [
        Object {
          "dt": 12345,
          "main": Object {
            "temp": 1,
            "temp_max": 2,
            "temp_min": 0,
          },
        },
        Object {
          "dt": 54321,
          "main": Object {
            "temp": 1,
            "temp_max": 3,
            "temp_min": 2,
          },
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "getCityWeathers": [Function],
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      },
      "weather": Array [],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "getCityWeathers": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
        "weather": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
